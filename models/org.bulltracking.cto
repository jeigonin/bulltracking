/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace com.biz
/**
 * The Animal type
 */
enum AnimalPart {
  o CHEST
  o LEG
  o RIBS
}

/**
 * The movement status for an animal
 */
enum MovementStatus {
  o IN_FIELD
  o IN_TRANSIT
  o IN_MARKET
  o IN_STORE
}

/**
 * A Farmer participant
 */
abstract participant User identified by email {
  o String email
  o String firstName
  o String lastName
}

/**
 * A Farmer participant
 */
participant Farmer extends User {
    o String address
    o String country
    o String postcode
    --> Business business optional
}

/**
 * A Farmer participant
 */
participant Shipper extends User {
}

/**
 * A Farmer participant
 */
participant Vendor extends User {
  o String licenceId
}

/**
 * A Regulator participant
 */
participant Regulator extends User {
}

/**
 * An Animal asset, which is related to a Farmer
 */
asset Animal identified by animalId {
    o String animalId
    o Integer age
    o String race
    o MovementStatus movementStatus
    --> Farmer owner
    --> Shipment shipment optional
}

/**
 * An Animal asset, which is related to a Field
 */
asset Market identified by marketId {
    o String marketId
    --> Vendor owner
    o String name
    o String address
    o String country
    o String zipcode
}

/**
 * A Shipment asset, which is related to a Shipper
 */
asset Shipment identified by shipmentId {
    o String shipmentId
    o DateTime departureDate optional
    o DateTime arrivalDate optional
    --> Shipper shipper
    --> Business businessDeparture
    --> Market marketArrival optional
}

/**
 * A Meat asset, which is related to an Animal
 */
asset Meat identified by meatId {
    o String meatId
    o AnimalPart part
    --> Vendor butcher
    --> Animal animal
}

/**
 * A Business asset which is owned by a Farmer, is related to a list of fields
 * and has a list of incoming animals.
 */
asset Business identified by sbi {
     o String sbi
     o String address1
     o String address2
     o String county
     o String postcode
     --> Farmer owner
     --> Animal[] incomingAnimals optional
}

/**
 * An abstract transaction type for animal movements
 */
transaction AnimalDeparture {
  o String[] logs optional
    --> Animal animal
    --> Shipment shipment
}

transaction AnimalArrival {
  o String[] logs optional
    --> Animal animal
    --> Market marketReceiver
}

transaction AnimalRetail {
  o String[] logs optional
    --> Meat meat
}


transaction SetupDemo  {
}
